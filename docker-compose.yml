version: '3.4'

services:
  ticketreservationsystem:
    image: ${DOCKER_REGISTRY-}ticketreservationsystem
    build:
      context: .
      dockerfile: CoreApi/TRS.Api/Dockerfile
    ports:
      - "5001:8080"
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
    depends_on:
      - postgres
      - backgroundjobs
    networks:
      - trs-network
  postgres:
    ports:
      - '5432:5432'
    container_name: trs-postgresql
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=trs_db
    volumes:
      - trs-postgresql-volume:/var/lib/postgresql/data
      - ./init.sql:/docker-entrypoint-initdb.d/init.sql
    image: postgres
    networks:
      - trs-network
  backgroundjobs:
    build:
      context: .
      dockerfile: BackgroundJobs/BackgroundJobs.Api/Dockerfile
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ASPNETCORE_URLS=http://+:5000
    ports:
      - "5000:5000"
    depends_on:
      - postgres
    networks:
      - trs-network

volumes:
  trs-postgresql-volume:

networks:
  trs-network:
    driver: bridge